version: '3.5'

networks:
  ckan_network:
    driver: bridge

services:
  db:
    image: postgres:9.6
    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_DATABASE_DATASTORE: $POSTGRES_DATABASE_DATASTORE
      DATASTORE_USER: $DATASTORE_USER
      DATASTORE_USER_PASSWORD: $DATASTORE_USER_PASSWORD
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - ckan_network

  solr:
    image: ckan/ckan-solr:2.9
    restart: always
    volumes:
      - solr_data:/var/solr
    networks:
      - ckan_network

  ckan:
    networks:
      - ckan_network
    container_name: ckan
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    extra_hosts:
      - "dockerhost:172.17.0.1" 
    environment:
      POSTGRES_DB: $POSTGRES_DB
      CKAN_SITE_ID: $CKAN_SITE_ID
      CKAN_SITE_URL: $CKAN_SITE_URL
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      DATASTORE_USER: $DATASTORE_USER
      DATASTORE_PASSWORD: $DATASTORE_USER_PASSWORD
      POSTGRES_DATABASE_DATASTORE: $POSTGRES_DATABASE_DATASTORE
      CKAN_SYADMIN: $CKAN_SYADMIN
      CKAN_SYADMIN_EMAIL: $CKAN_SYADMIN_EMAIL
      CKAN_SYADMIN_PASSWORD: $CKAN_SYADMIN_PASSWORD
      CKAN_USER: $CKAN_USER
      CKAN_USER_EMAIL: $CKAN_USER_EMAIL
      CKAN_USER_PASSWORD: $CKAN_USER_PASSWORD
      CKAN_SQL: $CKAN_SQL
      DEV: true
      CKAN_MAX_FILE_SIZE: $CKAN_MAX_FILE_SIZE
    command: sh -c /ckan-entrypoint/ckan-entrypoint.sh
    depends_on:
      - db
      - solr
      - redis
    volumes:
      - ckan_storage_path:/var/lib/ckan/default
      - ./ckanext-indexa:/usr/lib/ckan/default/src/ckanext-indexa
  redis:
    networks:
      - ckan_network
    image: redis:6
    restart: unless-stopped
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - ckan_network
    restart: "unless-stopped"
    environment:
      SERVER_NAME: $SERVER_NAME
  maps:
    networks:
      - ckan_network
    build:
      dockerfile: ./maps/dockerfile
    ports:
      - "3000:3000"
    command: sh -c "serve -s ./build"
volumes:
  db_data:
  solr_data:
  ckan_storage_path:
